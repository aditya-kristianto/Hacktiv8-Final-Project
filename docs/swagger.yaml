basePath: /
definitions:
  comment.CreateCommentRequest:
    properties:
      message:
        example: required
        type: string
      photo_id:
        type: string
    type: object
  comment.UpdateCommentRequest:
    properties:
      message:
        example: required
        type: string
    type: object
  helper.Response:
    properties:
      error: {}
      message:
        type: string
      payload: {}
      status:
        type: integer
    type: object
  photo.PhotoRequest:
    properties:
      caption:
        example: echo
        type: string
      photo_url:
        example: https://cdn.labstack.com/images/echo-logo.svg
        type: string
      title:
        example: echo_golang
        type: string
    type: object
  socialmedia.SocialMediaRequest:
    properties:
      name:
        example: linkedin
        type: string
      social_media_url:
        example: https://www.linkedin.com/in/aditya-kristianto
        type: string
    type: object
  user.LoginRequest:
    properties:
      email:
        example: aditya.kristianto@mncgroup.com
        type: string
      password:
        example: hacktiv8
        type: string
    type: object
  user.RegisterRequest:
    properties:
      age:
        example: 31
        type: integer
      email:
        example: aditya.kristianto@mncgroup.com
        type: string
      password:
        example: hacktiv8
        type: string
      username:
        example: aditya.kristianto
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      email:
        example: aditya.kristianto@mncgroup.com
        type: string
      username:
        example: aditya.kristianto
        type: string
    type: object
host: hacktiv8-final-project-production.up.railway.app
info:
  contact:
    email: kristianto.aditya@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Final Project server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Final Project API
  version: "1.0"
paths:
  /comments:
    get:
      consumes:
      - application/json
      description: To get comment
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get comment
      tags:
      - Comments
    post:
      consumes:
      - application/json
      description: To create comment
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/comment.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Create comment
      tags:
      - Comments
  /comments/{commentId}:
    delete:
      consumes:
      - application/json
      description: To delete comment
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        in: path
        name: commentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete comment
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: To update comment
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment ID
        in: path
        name: commentId
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/comment.UpdateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Update comment
      tags:
      - Comments
  /photos:
    get:
      consumes:
      - application/json
      description: To get photo
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get photo
      tags:
      - Photos
    post:
      consumes:
      - application/json
      description: To create photo
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/photo.PhotoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Create photo
      tags:
      - Photos
  /photos/{photoId}:
    delete:
      consumes:
      - application/json
      description: To delete photo
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Photo ID
        in: path
        name: photoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete photo
      tags:
      - Photos
    put:
      consumes:
      - application/json
      description: To update photo
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Photo ID
        in: path
        name: photoId
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/photo.PhotoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Update photo
      tags:
      - Photos
  /socialmedias:
    get:
      consumes:
      - application/json
      description: To get social media
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get social media
      tags:
      - SocialMedias
    post:
      consumes:
      - application/json
      description: To create social media
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/socialmedia.SocialMediaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Create social media
      tags:
      - SocialMedias
  /socialmedias/{socialMediaId}:
    delete:
      consumes:
      - application/json
      description: To delete social media
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Social Media ID
        in: path
        name: socialMediaId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete social media
      tags:
      - SocialMedias
    put:
      consumes:
      - application/json
      description: To update social media
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: Social Media ID
        in: path
        name: socialMediaId
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/socialmedia.SocialMediaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Update social media
      tags:
      - SocialMedias
  /users:
    delete:
      consumes:
      - application/json
      description: To delete user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: To update user
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Update user
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: To login
      parameters:
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Login
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: To register
      parameters:
      - description: Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Register
      tags:
      - Users
schemes:
- https
swagger: "2.0"
